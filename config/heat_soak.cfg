[gcode_macro HEAT_SOAK]
description: Heat soak the printer for a fixed time
variable_stage: "done"  # heating -> soaking -> done
variable_was_print_active: False
variable_soak_time: 0
variable_soak_start: 0
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(0)|float %}
    {% set NOZZLE_TEMP = params.NOZZLE_TEMP|default(0)|float %}
    {% set SOAK_TIME = (params.SOAK_TIME|default(20)|int) * 60 %}  # Convert minutes to seconds
    
    { action_respond_info("Starting heat soak - Target: Bed=%3.1f째C, Nozzle=%3.1f째C, Time=%d min" % 
        (BED_TEMP, NOZZLE_TEMP, SOAK_TIME / 60)) }
    
    # Set temperatures
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={NOZZLE_TEMP}
    
    # Track if print was active
    {% set is_print_active = printer['virtual_sdcard'].is_active or 
                            printer['virtual_sdcard'].file_position != 0.0 %}
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=was_print_active VALUE={is_print_active}
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time VALUE={SOAK_TIME}
    
    # Pause print if active
    {% if is_print_active %}
        PAUSE
    {% endif %}
    
    # Start heating phase
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE='"heating"'
    UPDATE_DELAYED_GCODE ID=_HEAT_SOAK_TIMER DURATION=1

[gcode_macro STOP_HEAT_SOAK]
description: Stop heat soak process
gcode:
    UPDATE_DELAYED_GCODE ID=_HEAT_SOAK_TIMER DURATION=0
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE='"done"'

[gcode_macro RESUME]
rename_existing: BASE_RESUME
description: Resume with heat soak handling
gcode:
    {% set stage = printer["gcode_macro HEAT_SOAK"].stage %}
    {% if stage in ('heating', 'soaking') %}
        STOP_HEAT_SOAK
    {% endif %}
    BASE_RESUME

[delayed_gcode _HEAT_SOAK_TIMER]
gcode:
    {% set stage = printer["gcode_macro HEAT_SOAK"].stage %}
    
    # Check if print was canceled
    {% if printer["gcode_macro HEAT_SOAK"].was_print_active and printer.virtual_sdcard.file_position == 0.0 %}
        STOP_HEAT_SOAK
        { action_respond_info("Heat soak aborted - Print canceled") }
        
    {% elif stage == "heating" %}
        # Check if bed and nozzle are at temperature
        {% set bed_temp = printer.heater_bed.temperature %}
        {% set nozzle_temp = printer.extruder.temperature %}
        {% set bed_target = printer.heater_bed.target %}
        {% set nozzle_target = printer.extruder.target %}
        
        {% if bed_temp >= (bed_target - 1) and nozzle_temp >= (nozzle_target - 1) %}
            SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE='"soaking"'
            SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_start VALUE={printer.toolhead.estimated_print_time}
            { action_respond_info("Target temperatures reached, starting soak timer") }
        {% else %}
            { action_respond_info("Heating: Bed %.1f/%.1f째C, Nozzle %.1f/%.1f째C" % 
                (bed_temp, bed_target, nozzle_temp, nozzle_target)) }
        {% endif %}
        UPDATE_DELAYED_GCODE ID=_HEAT_SOAK_TIMER DURATION=5
        
    {% elif stage == "soaking" %}
        {% set elapsed = printer.toolhead.estimated_print_time - printer["gcode_macro HEAT_SOAK"].soak_start %}
        {% set soak_time = printer["gcode_macro HEAT_SOAK"].soak_time %}
        {% if elapsed >= soak_time %}
            { action_respond_info("Heat soak complete") }
            STOP_HEAT_SOAK
            {% if printer.pause_resume.is_paused %}
                RESUME
            {% endif %}
        {% else %}
            {% set remaining = (soak_time - elapsed) / 60 %}
            { action_respond_info("Soaking: %.1f minutes remaining" % remaining) }
            UPDATE_DELAYED_GCODE ID=_HEAT_SOAK_TIMER DURATION=5
        {% endif %}
    {% endif %}
    
    # Prevent idle timeout
    {% if stage != "done" %}
        G4 P1
    {% endif %}